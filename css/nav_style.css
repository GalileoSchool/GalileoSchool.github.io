@import url('https://fonts.googleapis.com/css?family=Didact+Gothic');

/* This is the default style that will be used, in case there are no media queries this is the default style */


/* I like to start with the mobile viewport first, as it serves as a foundation that I can just expand on using queries etc. */


/* Start Nav-Desk (Navigation-Desktop) */

.nav-desk {
    display: block;
}

.nav-desk>ul {
    display: none;
    margin: auto;
    /* I will be using vw (view-width) units, this is the measure of the browsers content window width */
    /* Thanks to vw units we can assure ourselves that all things on our webpage will be super responsive, meaning their size/scale will change proportionally to the browser content window width */
    width: 100vw;
    list-style-type: none;
    text-align: center;
    position: fixed;
    background-color: #9a0101;
    z-index: 1;
    padding: 8vw;
    /* This tells the browser that I don't want any padding at the start of the line in my whole unordered list, without this our items inside the ul would be shifted towards right due to this padding value not being 0 */
    padding-left: 0;
}

.nav-desk li {
    padding: 3vw;
    padding-bottom: 1vw;
    text-decoration: none;
    color: white;
    font-family: 'Century Gothic', 'Futura', 'Didact Gothic', san-serif;
    font-size: 4.5vw;
    z-index: 1;
}

.nav-desk .title {
    padding: 4vw;
}

.nav-desk li:last-child {
    margin-bottom: 0;
}

.nav-desk li:hover {
    background-color: #bd0303f8;
    color: #ffffff;
    cursor: pointer;
}

/* End Nav-Desk */


/* Start of Nav-Phone classes */

div.nav-phone.lang {
    width: 10vw;
}

div.nav-phone.lang>div {
    margin: auto;
}

.nav-phone .logo>img {
    width: 8vw;
    height: 8vw;
    margin: auto;
    padding: 1vw;
}

.nav-phone .logo {
    width: auto;
}

.nav-phone .title {
    width: auto;
    margin: auto;
    margin-left: calc(1.5rem - 3.5vw);
    padding-left: 0;
    font-size: 6.3vw;
    text-transform: uppercase;
}

.nav-phone {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.nav-phone>.left {
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    /* Z-index is the Z-axis on a 3D coordiante plane, therefore it tells the brwoser the order of visibility in which our elements should be ordered, smallest value = all the way in the back and the highest value = all the way in the front */
    z-index: 1;
    list-style-type: none;
    width: 100%;
}

.nav-phone>.right {
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    height: 100%;
    z-index: 1;
    /* This tells the browser that we don't want to display the default list bullet points infront of every list item */
    list-style-type: none;
}

.nav-phone .language-dropdown {
    display: flex;
    flex-direction: column;
}

.nav-phone .serach-drop .dropdown {
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.nav-phone .language-dropdown-content {
    position: absolute;
    display: none;
    top: 10vw;
    z-index: 1;
    height: 10vw;
}

.nav-phone .language-dropdown-content>li {
    background-color: unset;
}

.nav-phone .lang {
    height: 100%;
}

.nav-phone>img {
    height: 100%;
}

.nav-phone .search-input {
    width: 0vw;
    height: 7.65vw;
    display: none;
    border: 0.2vw solid #cccccc;
    background: #eeeeee;
    padding: 1vw;
    font-size: 3.5vw;
    position: absolute;
    z-index: 1;
    /* Opacity is the measure of how transparent an element and its background are */
    opacity: 0;
}

.nav-phone .search-input:focus {
    /* !important is a special css attribute that overrides any styles that could possibly clash with it (It's like the Principle of High School compared to the Teacher of High School) */
    opacity: 1 !important;
}

/* End of Nav-Phone classes */


/* Pre-Made Styling Classes */

.light-gray {
    background-color: #e4e4e4 !important;
}

.darker-gray {
    background-color: #cccccc;
}

.hidden {
    visibility: hidden;
}

.no-display {
    display: none !important;
}

.amber {
    background: #9a0101;
}

div.square {
    display: flex;
    width: 10vw;
    text-align: center;
}

.blur {
    filter: blur(1px);
}

/* End of Pre-Made styling classes */


/* Styling Elments using ID */

#logo-container {
    width: 100%;
}

#title {
    margin: auto;
    color: #a60000;
    font-weight: bold;
    letter-spacing: -0.18vw;
    transform: scale(1, 1.5);
    cursor: default;
}

#nav-btn {
    background-color: #a60000;
    width: 10vw;
}

#search {
    background-color: #cccccc;
    width: 10vw;
}

#search-img {
    width: 7vw;
    height: 7vw;
}

#nav-bar {
    height: 10vw;
    width: 100vw;
}

#menu-img, #search-img {
    height: 7vw;
    margin: auto;
}

/* End of Styling Elements by ID */


/* Logo + Title Css */

.logo-open-nav {
    margin-left: 3vw !important;
}

.logo-img-open-nav {
    margin-bottom: 0.2vw !important;
    padding-bottom: 0.5vw !important;
}

.title-open-nav {
    color: ghostwhite !important;
}

.title-cont-open-nav {
    margin-bottom: 0.5vw !important;
    padding-bottom: 0.5vw !important;
}

/* End of Logo + Title Css */


/* All the rest */

.content {
    z-index: 0;
    padding: 1em;
    text-align: center;
}

body {
    padding: 0;
    margin: 0;
}

.lang-text {
    font-family: 'Century Gothic', 'Futura', 'Didact Gothic', san-serif;
    font-weight: 500;
    font-size: 5.6vw;
    position: relative;
    margin: auto;
    cursor: default;
}

.nav-elem>div {
    margin: auto;
    text-transform: uppercase;
}

.active-nav-btn {
    background-color: #c00000 !important;
    transition: 0.5s ease;
}

/* This is a query that tells the browser what style to use in case its width is > or = to 670px (px stands for pixels) */
/* You may wonder how I got the number 670? Easy, trial and error method. You will have to master this technique to become a very good programmer. */
/* I was trying different values from 800 to 540 and 670 came to be the golden mean. You may wonder why 800 to 540. Well, these widths are the most common for tablets and bigger mobile devices. */

/* AKA this is the Tablet Style */

@media screen and (min-width: 670px) {
    .nav-desk>ul {
        list-style-type: none;
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        background-color: rgba(240, 240, 240, 0.89);
        width: 100%;
        left: 0;
        margin-top: 0.5%;
        padding: 0;
        border-bottom: 2px solid black;
        position: relative;
        background-color: inherit;
        width: 99%;
    }
    #language:hover {
        background-color: #e7e7e7;
        cursor: pointer;
    }
    .nav-desk li:hover {
        background-color: rgba(240, 240, 240, 0.89);
        color: #4e4e4e;
        cursor: pointer;
    }
    .nav-desk li {
        margin-bottom: 0 !important;
        position: relative;
        color: black;
        border-right: 1px solid black;
        width: 100%;
        padding: 1.5vw;
        font-size: 2.3vw;
    }
    .nav-elem {
        display: flex;
        justify-content: center;
    }
    li:last-child {
        border-right: none !important;
    }
    .nav-desk {
        display: block;
    }
    .nav-phone {
        display: none;
    }
    #search:hover {
        background-color: #e9e9e9;
        cursor: pointer;
    }
}


/* Bigger Screens */

@media only screen and (min-width: 1000px) {
    .nav-desk li {
        font-size: 1.5vw;
        padding: 1.1vw;
    }
    .nav-elem>div {
        transform: translateY(0%);
    }
}


/* Desktop Viewport */

@media only screen and (min-width: 1500px) {
    .nav-desk li {
        font-size: 1.2vw;
        padding: 0.8vw;
    }
}